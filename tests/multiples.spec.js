import test from 'ava';
import { palindromic } from '../solutions/004';
import { sumSquareDifference } from '../solutions/006';
import { seriedProduct } from '../solutions/008';
const m = require('../solutions/001/multiples');

test('Multiples of 3 and 5', test => {
  test.is(m.multiples(10), 23, 'Multiples under 10 equals 23');
  test.is(m.multiples(1000), 233168, 'Multiples under 1000')
});

test('Async multiples of 3 and 5', async t => {
  t.is(await m.multiplesAsync(10), 23, 'Multiples under 10 equals 23');
  t.is(await m.multiplesAsync(1000), 233168, 'Multiples under 1000')
});

test('Largest palindrome from multiples', t => {
  t.is(palindromic(2), 9009, '2 digit palindrome is 9009');
  t.is(palindromic(3), 906609, '3 digit palindrome is 906609.')
})

test('Difference between the sum of the squares', t => {
  t.is(sumSquareDifference(10), 2640, 'The difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 âˆ’ 385 = 2640.')
  t.is(sumSquareDifference(100), 25164150, 'The difference between the sum of the squares of the first hunderd natural numbers and the square of the sum is 25164150.')
})

test('Can get highest product in a series', t => {
  t.is(seriedProduct(`73167176531330624919225119674426574742355349194934
  96983520312774506326239578318016984801869478851843
  85861560789112949495459501737958331952853208805511
  12540698747158523863050715693290963295227443043557
  66896648950445244523161731856403098711121722383113
  62229893423380308135336276614282806444486645238749
  30358907296290491560440772390713810515859307960866
  70172427121883998797908792274921901699720888093776
  65727333001053367881220235421809751254540594752243
  52584907711670556013604839586446706324415722155397
  53697817977846174064955149290862569321978468622482
  83972241375657056057490261407972968652414535100474
  82166370484403199890008895243450658541227588666881
  16427171479924442928230863465674813919123162824586
  17866458359124566529476545682848912883142607690042
  24219022671055626321111109370544217506941658960408
  07198403850962455444362981230987879927244284909188
  84580156166097919133875499200524063689912560717606
  05886116467109405077541002256983155200055935729725
  71636269561882670428252483600823257530420752963450`, 4), 5832);
})